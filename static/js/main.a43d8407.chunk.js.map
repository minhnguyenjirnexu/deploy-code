{"version":3,"sources":["lib/Utils.ts","components/FormService.ts","components/Validation.ts","components/FileField.tsx","components/RadioField.tsx","lib/Autocompletes.ts","components/Input.tsx","components/MonthlyField.tsx","components/SubChild.tsx","components/FieldGroup.tsx","components/Button.tsx","components/Spinner.tsx","components/ContinueButton.tsx","components/UploadButton.tsx","components/Field.tsx","components/HistoryField.tsx","machines/OTPAskingMachine.ts","machines/OtpConfirmMachine.ts","machines/OTPResendMachine.ts","machines/OtpMachine.ts","machines/UploadMachine.ts","machines/IDOCRMachine.ts","machines/DLOCRMachine.ts","forms/ocb/index.ts","lib/ConvertStyle.ts","components/Preloading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["logState","state","console","groupCollapsed","log","groupEnd","process","REACT_APP_MODE","group","value","EMI","ir","np","pv","fv","type","anualIr","Math","pow","isRequestState","current","actions","length","findIndex","action","fieldName","formService","meta","name","service","ret","toStrings","stateId","stateIds","split","isChildCompare","parent","machineId","machine","id","generateChild","Object","assign","isHistory","compareBool","keyStateId","pop","parentStateId","join","childs","child","index","found","keys","indexOf","historyMeta","history","filter","key","buttonName","PHONE_NUMBER_REGEXS","MY","SG","VN","ID_REGEXS","YEAR_MILLISECONDS","validateEmail","email","test","toLowerCase","validatePhoneNumber","phoneNumber","countryCode","FileField","React","forwardRef","props","ref","useState","defaultValue","URL","revokeObjectURL","selectedFile","setSelectedFile","className","htmlFor","title","onChange","event","createObjectURL","target","files","send","field","src","style","maxWidth","alt","RadioField","values","selected","setSelected","map","checked","label","AUTOCOMPLETE_VALID_INPUTS","AUTOCOMPLETE_VALID_VALUES","ERROR_MESSAGES","required","minLength","maxlength","accept","Input","error","setError","setValue","validates","validate","inputProps","autoComplete","inputType","autocomplete","getAutocomplete","optional","maxLength","placeholder","isValid","errorMessage","replace","toString","borderColor","MonthlyField","fontWeight","fontSize","round","monthlyPay","SubChild","elem","getCurrentStateName","currentFormValue","showWhen","condField","condValue","el","idx","options","createRef","opt","hasInput","states","parentState","FieldGroup","_meta","context","formValue","setMonthlyPay","currentTarget","contextValue","hint","Button","position","styles","onClick","backgroundColor","primaryColor","color","button","hideArrow","Spinner","display","alignItems","ContinueButton","childRefs","currentIndex","stacks","a","preventDefault","reduce","prev","childKeys","parentRef","cKeys","p","currentK","obj","flex","width","UploadButton","Field","fieldSetEnd","isUploadFile","scrollToBottom","scrollIntoView","behavior","_setDefaultChildRefs","previousValue","currentValue","c","childStateId","this","eventName","payload","isString","h","_fieldTitle","fieldTitle","_subTitle","subTitle","matches","formatHint","justifyContent","float","clear","Component","HistoryField","_hint","secondaryBackgroundColor","margin","padding","borderRadius","isTestMode","OTPAskingMachine","Machine","initial","requesting","invoke","Promise","resolve","setTimeout","fetch","method","then","response","json","onDone","onError","success","onEntry","escalate","OTPConfirmMachine","waitingForCode","on","CODE","checkOTP","otp","reject","cond","data","isValidOtp","OTPResendMachine","resending","CONFIRM_DELAY_TIME","TTS_DELAY_TIME","otpConfirm","after","CONTINUE","callOTP","RESEND","OTPMachine","idle","asking","confirming","entry","to","timeout","RETRY","EXIT","delay","uploadFile","FormData","formValueKey","forEach","append","body","UploadMachine","uploading","updateFormValue","oldFiles","newUploadedFiles","curr","originalname","IDOCRMachine","idCard","headers","Headers","JSON","stringify","idOCR","finish","DLOCRMachine","url","dlOCR","genArr","from","suffix","results","i","push","OCB_CONSTANTS","parallel","packageField","NEXT","amount","tenor","readOnly","primaryInfo","PREV","fullName","loanPurpose","profile","educationLevel","maritalStatus","noOfDependents","address","city","district","ward","hamlet","street","unitNo","apartmentName","isPermanentAddress","ownership","liveFrom","month","year","homePhone","additionInfo","job","employee","businessType","companyName","industry","companyPhoneNumber","occupation","contractType","workingExpCurrent","businessOwner","businessName","noOfYearsBusiness","householdBusinessOwner","householdBusinessName","workplace","isCurrent","isRegular","income","monthlyIncome","monthlyExpense","noOfCurrentLoan","noOfCreditCard","bankAccount","accountHolder","accountNumber","bankName","branch","references","first","relationship","second","front","back","idCardOCR","idCardConfirm","notice","birthDate","birthPlace","issueDate","driverLicense","driverLicenseOCR","ocbFields","POPSTATE","UPDATE_AMOUNT","loanAmount","parseInt","UPDATE_DURATION","loanDuration","CHANGE","calculateMonthlyRepayment","UPDATE_FORM_VALUE","package","selfie","image","uploadSelfie","titleStyle","letterSpacing","textShadow","ocbOptions","guards","packageValid","otpValid","purpose","idValid","validateID","date","Date","getTime","toDate","Number","checkExpireIdDay","isEmpty","vals","updateStacks","concat","next","updateActive","dest","stack","currentState","activities","services","tenure","LONG_SCALE","INSURANCE_RATE","INTEREST_RATE","applyAmount","insuranceCharge","totalLoanAmount","ocbFormMachine","isAlreadyConfirmed","secondaryColor","textColor","disableColor","border","welcome","LOGIN","brandName","usp","advantages","content","logoUrl","backgroundImage","complete","LOGOUT","invalid","rvhRegex","defaultStyle","height","convertStyle","givenStyle","windowHeight","undefined","Array","isArray","Error","throwOnBadArgs","usedStyle","result","propertyValue","_","rvh","parseFloat","replaceRvhWithPx","opacity","zIndex","top","left","Preloader","loaded","componentDidMount","window","requestAnimationFrame","checkReadyState","document","readyState","setState","fadeDuration","children","cleanChildren","Children","displayName","Fragment","transition","xmlns","viewBox","d","Sentry","dsn","previousState","serializedState","localStorage","getItem","parse","Welcome","textAlign","advantage","Wrap","setStyle","useEffect","updateStyle","innerHeight","convertedStyle","addEventListener","removeEventListener","Complete","removeItem","location","reload","Invalid","App","machineState","useMachine","immediate","setChild","childService","setChildService","onTransition","childrens","subscribe","childState","changed","forward","_fieldName","pushState","e","onpopstate","pathName","pathname","flexDirection","isChild","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a43d8407.chunk.js","sourcesContent":["import { State, EventObject } from \"xstate\";\nimport { OCBContext } from \"../forms/ocb\";\n\nexport const logState = (state: State<OCBContext, EventObject>) => {\n  if (console && console.groupCollapsed && console.log && console.groupEnd && process.env.REACT_APP_MODE !== 'test') {\n    console.group(`[MachineTransition]: `);\n    console.log(state.value, { ...state });\n    console.groupEnd();\n  }\n};\n\n\nexport const EMI = (ir: number, np: number, pv: number, fv: number, type: number) => {\n  if(ir !== 0) {\n    const anualIr = Math.pow((1 + ir), np);\n    return (pv * anualIr * ir) / (anualIr - 1);\n  }\n  return 0;\n}\n\nexport const isRequestState: Function = (current: any): boolean => {\n  if(current && current.actions && current.actions.length > 0) {\n    const types = current.actions.findIndex((action: any) => action.type === \"xstate.start\");\n    return types > -1;\n  }\n  return false;\n}","import { isRequestState } from \"../lib/Utils\";\n\nexport const fields = (formService?: any):string => {\n  return (formService.value as any).field;\n}\nexport const fieldName = (current?: any, formService?: any):string => meta(current,formService).name\nexport const meta = (current?: any, service?: any):any => {\n  let ret:any = {}\n  if(isRequestState(current)) {\n    return ret;\n  }\n  if(current && typeof current != 'undefined' && service !== null) {\n    for (let stateId of current.toStrings()) {\n      const stateIds = stateId.split('.');\n      const isChildCompare = service.parent ? 1 : 2;\n      const isChild = stateIds.length > isChildCompare;\n      if(isChild) {\n        const machineId = service.machine.id;\n        const meta = current.meta;\n        ret = generateChild(ret, machineId, stateId, meta, stateIds);\n      } else {\n        Object.assign(ret, {\n          ...current.meta[service.machine.id+\".\"+stateId],\n          stateId\n        })\n      }\n    }\n  }\n  return ret\n}\n\nconst generateChild = (ret: any, machineId: string, stateId: string, meta: any, stateIds: string[], isHistory: boolean = false) => {\n  const compareBool = isHistory ? 4 : 3;\n  const keyStateId = isHistory ? stateId : (machineId + \".\" + stateId);\n  if(stateIds.length > compareBool) {\n    stateIds.pop();\n    const parentStateId = stateIds.join('.');\n    let childs:any = ret.child;\n    if(childs && childs.length) {\n      let index = childs.findIndex((child: any) => child.stateId === parentStateId);\n      let found = childs[index];\n      if(found) {\n        if(Object.keys(found).indexOf('child') === -1) {\n          found.child = [{\n            ...meta[keyStateId],\n            stateId\n          }];\n        } else {\n          found.child = [...found.child, {\n            ...meta[keyStateId],\n            stateId\n          }];\n        }\n      }\n    }\n  } else {\n    if(Object.keys(ret).indexOf('child') === -1) {\n      ret.child = [{\n        ...meta[keyStateId],\n        stateId\n      }];\n    } else {\n      ret.child = [...ret.child, {\n        ...meta[keyStateId],\n        stateId\n      }];\n    }\n  }\n  \n\n  return ret;\n}\n\nexport const historyMeta = (history?: any, service?: any): any => {\n  let ret: any = {};\n\n  if(history && typeof history !== 'undefined') {\n    const keys = Object.keys(history.meta).filter(key => key !== service.machine.id);\n    for(let key of keys) {\n      const stateIds = key.split('.');\n      const isChild = stateIds.length > 3;\n      if(isChild) {\n        const machineId = service.machine.id;\n        const meta = history.meta;\n        ret = generateChild(ret, machineId, key, meta, stateIds, true);\n      } else {\n        Object.assign(ret, {\n          ...history.meta[key],\n          stateId: key\n        })\n      } \n    }\n  }\n\n  return ret;\n}\n\nexport const buttonName = (current?: any, service?: any):string => meta(current, service).buttonName && meta(current, service).buttonName !== '' ? meta(current, service).buttonName : 'Continue'\n\nexport const fieldTitle = (current?: any, service?: any):string => meta(current, service).title\n","const PHONE_NUMBER_REGEXS: any = {\n  MY: /(\\+?6?0)[0-9]-*[0-9-.\\s]{6,9}/,\n  SG: /[6|8|9]\\d{7}|\\+65[6|8|9]\\d{7}|\\+65\\s[6|8|9]\\d{7}/,\n  VN: /^(\\+?(84|0))(\\d{9}|9\\d{8})$/\n}\n\nconst ID_REGEXS: any = {\n  MY: /(([[1-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01]))-([0-9]{2})-([0-9]{4})/,\n  SG: /^[STFG]\\d{7}[A-Z]$/,\n  VN: /(^(?:[1-9]|0[1-9]|1[0-9]|20|2[0-9]|30|3[0-8])[0-9]{7}$)|(^[0-9][0-9]?[0-9]{10}$)/,\n}\n\nconst YEAR_MILLISECONDS = 31536000000;\n\nexport function validateEmail(email: string) {\n    const re = /^(([^<>()\\\\.,;:\\s@\"]+(\\.[^<>()\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n}\n\nexport function validatePhoneNumber(phoneNumber: string, countryCode: string = 'VN'): boolean {\n  const regEx = PHONE_NUMBER_REGEXS[countryCode];\n  return regEx.test(phoneNumber.toLowerCase());\n}\n\nexport function validateID(id: string, countryCode: string = 'VN') {\n  const re = ID_REGEXS[countryCode];\n  return re.test(id.toLowerCase());\n}\n\nexport function checkExpireIdDay(date: string) {\n  const issueDate = new Date(date).getTime();\n  const toDate = new Date().getTime();\n  return Number((toDate - issueDate) / YEAR_MILLISECONDS) < 15;\n}","import React, { useState } from \"react\";\nimport { InputProps } from \"./Input\";\n\nexport const FileField: any = React.forwardRef((props: InputProps, ref: any) => {\n    const {meta} = props;\n    const [selectedFile, setSelectedFile] = useState(props.defaultValue && props.defaultValue !== '' ? URL.revokeObjectURL(props.defaultValue) : '');\n    return <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"offset-md-3 col-md-6\">\n          <div className=\"form-group files\">\n            <label htmlFor={meta.stateId}>{meta.title}</label>\n            <input type=\"file\" className=\"form-control\" ref={ref} onChange={(event: any) => {\n              setSelectedFile(URL.createObjectURL(event.target.files[0]));\n              props.service.send('UPDATE_FORM_VALUE', {field: meta.stateId, value: event.target.files[0]});\n            }}/>\n            {\n              selectedFile && selectedFile !== '' ? <img src={selectedFile} style={{\n                maxWidth: '100%'\n              }} alt={meta.title}/> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n);","import React, { useState } from \"react\";\nimport { InputProps } from \"./Input\";\n\nexport const RadioField: any = React.forwardRef((props: InputProps, ref: any) => {\n    const {meta, defaultValue} = props;\n    const {values} = meta;\n    const [selected, setSelected] = useState(defaultValue || values[0].value);\n    return <div className=\"container\">\n      <div className=\"row\">\n        {values.map((value: any, index: number) => (<div className=\"radio\" key={index}>\n          <label>\n            <input type=\"radio\" value={value.value} onChange={(event: any) => setSelected(value.value)} checked={value.value === selected} ref={ref}/>\n            {value.label}\n          </label>\n        </div>))}\n      </div>\n    </div>;\n  }\n);","export const AUTOCOMPLETE_VALID_INPUTS = ['text', 'search', 'url', 'tel', 'email', 'password', 'datepickers', 'range', 'color'];\n\nexport const AUTOCOMPLETE_VALID_VALUES = ['off', 'on', 'name', 'honorific-prefix', 'given-name', 'additional-name', 'family-name',\n    'honorific-suffic', 'nickname', 'email', 'username', 'new-password', 'current-password', 'one-time-code', 'organization-title',\n    'organization', 'street-address', 'address-line1', 'address-line2', 'address-line3', 'address-level4', 'address-level3',\n    'address-level2', 'address-level1', 'country', 'country-name', 'postal-code', 'cc-name', 'cc-given-name', 'cc-addition-name',\n    'cc-family-name', 'cc-number', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-csc', 'cc-type', 'transaction-currency',\n    'transaction-amount', 'language', 'bday', 'bday-day', 'bday-month', 'bday-year', 'sex', 'tel', 'tel-country-code',\n    'tel-national', 'tel-area-code', 'tel-local', 'tel-extension', 'impp', 'url', 'photo'\n]","import React, { useState } from 'react';\nimport { validateEmail, validatePhoneNumber } from './Validation';\nimport { FileField } from './FileField';\nimport { RadioField } from './RadioField';\nimport { AUTOCOMPLETE_VALID_INPUTS, AUTOCOMPLETE_VALID_VALUES } from '../lib/Autocompletes';\n\nexport type InputProps = {\n    type?: string,\n    defaultValue?: string,\n    placeholder?: string,\n    meta?: any,\n    autocomplete?: any,\n    name?: string,\n    current?: any,\n    service?: any\n}\n\nconst ERROR_MESSAGES = {\n    required: 'This field is required',\n    email: 'Please enter a valid email address',\n    phoneNumber: 'Please enter a valid phone number',\n    minLength: 'Please enter at least {0} characters',\n    maxlength: 'Please enter no more than {0} characters',\n    accept: 'Please upload a valid file type: {0}'\n}\n\nexport type Validate = {\n    optional?: boolean,\n    minLength?: number,\n    maxLength?: number,\n    accept?: string,\n}\n\nconst validate: Function = (value: any, meta: any, inputType: string): any => {\n    const type: Validate = meta.validate || {};\n    if(!type.optional && value === '') {\n        return {\n            isValid: false,\n            errorMessage: ERROR_MESSAGES.required\n        };\n    }\n\n    if(inputType === 'email' && !validateEmail(value)) {\n        return {\n            isValid: false,\n            errorMessage: ERROR_MESSAGES.email\n        };\n    }\n\n    if(inputType === 'tel') {\n        const countryCode = meta.countryCode || 'VN';\n        if(!validatePhoneNumber(value, countryCode))\n            return {\n                isValid: false,\n                errorMessage: ERROR_MESSAGES.phoneNumber\n            };\n    }\n\n    if(type.minLength && typeof type.minLength !== 'undefined' && value.length < type.minLength) {\n        return {\n            isValid: false,\n            errorMessage: ERROR_MESSAGES.minLength.replace('{0}', type.minLength.toString())\n        }\n    }\n\n    if(type.maxLength && typeof type.maxLength !== 'undefined' && value.length > type.maxLength) {\n        return {\n            isValid: false,\n            errorMessage: ERROR_MESSAGES.maxlength.replace('{0}', type.maxLength.toString())\n        }\n    }\n\n    return {\n        isValid: true,\n        errorMessage: ''\n    };\n}\n\nconst getAutocomplete: Function = (inputType: string, value: string): string => {\n    let autocomplete: string = \"on\";\n\n    if(AUTOCOMPLETE_VALID_VALUES.indexOf(inputType) > -1) {\n        autocomplete = inputType;\n    }\n\n    if(AUTOCOMPLETE_VALID_VALUES.indexOf(value) > -1) {\n        autocomplete = value;\n    }\n    return autocomplete;\n}\n\nexport const Input: any = React.forwardRef((props: InputProps, ref: any) => {\n    const [error, setError] = useState('');\n    const [value, setValue] = useState('');\n    const type: string = props.type || 'text';\n    if(type === 'file') return <FileField {...props} ref={ref}/>;\n    if(type === 'radio') return <RadioField {...props} ref={ref} />;\n    const validates: Validate = props.meta.validate || {};\n    let inputProps: any = {};\n    if(AUTOCOMPLETE_VALID_INPUTS.indexOf(type) > -1) {\n        // When input type is exist on Array of valid inputs will work with autocomplete attributes\n        inputProps.autoComplete = getAutocomplete(type, props.meta.autocomplete || '');\n    }\n    \n    if(!validates.optional) inputProps.required = true;\n    if(validates.minLength) inputProps.minLength = validates.minLength;\n    if(validates.maxLength) inputProps.maxLength = validates.maxLength;\n    if(props.placeholder && props.placeholder !== '') inputProps.placeholder = props.placeholder;\n    if(props.name && props.name !== '') inputProps.name = props.name;\n    return  <label htmlFor={props.name}>\n        <input type={type} onChange={(event: any) => {\n            setValue(event.target.value);\n            const {isValid, errorMessage} = validate(event.target.value, props.meta, type);\n            if(!isValid) {\n                setError(errorMessage)\n            } else {\n                setError('');\n            }\n        }} ref={ref} defaultValue={props.defaultValue} style={{\n            borderColor: value === '' ? 'initial' : (error !== '' ? 'red' : 'green')\n        }} {...inputProps} id={props.name}/>\n        <br/>\n        <span>{error}</span>\n    </label>;\n});","import React from \"react\";\n\ntype MonthlyType = {\n    monthlyPay: number\n}\n\nexport const MonthlyField: React.FC<MonthlyType> = (props: any) => {\n    return <span style={{\n        fontWeight: 700,\n        fontSize: 20\n    }}>{Math.round(props.monthlyPay).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} VNĐ</span>;\n  }","import React from \"react\";\nimport { IOptions } from \"../forms/ocb\";\nimport { Input } from \"./Input\";\n\nexport const SubChild: any = React.forwardRef((props: any, ref: any) => {\n  const {elem, getCurrentStateName, currentFormValue} = props;\n  \n  if(elem.child && elem.child.length > 0) {\n    if(elem.showWhen) {\n      const condField = elem.showWhen['field'];\n      const condValue = elem.showWhen['value'];\n      if(!(currentFormValue && currentFormValue[condField] === condValue)) {\n        return null;\n      }\n    }\n\n    return <div>\n    <p>{elem.title}</p>{\n      elem.child.map((el: any, idx: number) => {\n      return <div key={el.stateId}>\n        <label htmlFor={el.stateId}>{el.title}</label>\n        {\n          (\n            el.options ? <div>\n              <select ref={ref ? ref[el.stateId] : React.createRef()} name={el.stateId}\n                defaultValue={getCurrentStateName(currentFormValue, el.stateId)}\n                onChange={el.onChange ? (event) => {\n                    \n                }: (event) => {}}\n                id={el.stateId}\n              >\n                {el.options.map((opt:IOptions) => <option key={opt.value} value={opt.value}>{opt.label}</option>)}\n              </select>\n            </div> : !(el.hasInput === false) ? <Input ref={ref ? ref[el.stateId] : React.createRef()} \n              defaultValue={getCurrentStateName(currentFormValue, el.stateId)}\n              name={ el.stateId } type={el.type || \"text\"} placeholder={el.placeholder} meta={el}/> : null\n          )\n        }\n      </div>\n      })\n    }\n    </div>\n  }\n  return null;\n});","import React, { useState } from \"react\";\nimport { meta, historyMeta } from \"./FormService\";\nimport { IOptions } from \"../forms/ocb\";\nimport { IChildRef } from \"../lib/Types\";\nimport { Input } from \"./Input\";\nimport { MonthlyField } from \"./MonthlyField\";\nimport {SubChild} from './SubChild';\n\nconst getCurrentStateName = (currentFormValue: any,stateId: String) => {\n  if(!currentFormValue) return '';\n  const states = stateId.split('.');\n  let parentState = '';\n  if(states.length > 4) {\n    // Has parent state\n    parentState = states[states.length - 2];\n  }\n  const state = states[states.length - 1];\n  \n  return parentState !== '' ?  currentFormValue[parentState][state] : currentFormValue[state];\n}\n\nexport const FieldGroup: any = React.forwardRef((props: any, ref: IChildRef | null) => {\n    const {current, service, isHistory} = props;\n    if(current.actions && current.actions.length === 1 && current.actions[0].type === \"xstate.start\") {\n      return null;\n    }\n    const _meta = isHistory ? historyMeta(current, service) : meta(current, service);\n    const currentFormValue = current.context ? (current.context.formValue as any)[props['name']] : null;\n    const [monthlyPay, setMonthlyPay] = useState(current.context.monthlyPay || 0);\n    if(!(_meta.child && _meta.child.length)) return null;\n    return _meta.child.map((elem: any, index: number) => elem ? \n      <p key={elem.stateId}><legend>{!(elem.child && elem.child.length) ? elem.title : ''}</legend>\n      <SubChild {...props} meta={meta} elem={elem} getCurrentStateName={getCurrentStateName} currentFormValue={currentFormValue} ref={(ref as any)[elem.stateId]}/>\n      \n      {\n        !elem.child ? (\n          elem.options ? <label htmlFor={elem.stateId}>\n            <select ref={ref ? ref[elem.stateId] : React.createRef()} name={ elem.stateId } \n              defaultValue={getCurrentStateName(currentFormValue, elem.stateId)}\n              onChange={elem.onChange ? (event) => {\n                props.service.send(elem.name, {value: event.currentTarget.value});\n                const value = props.service.send(elem.onChange.name);\n                setMonthlyPay((value.context as any)[elem.onChange.field]);\n              }: (event) => {\n                props.service.send('UPDATE_FORM_VALUE', {field: elem.stateId, value: event.currentTarget.value})\n              }}\n              id={elem.stateId}\n            >\n              {elem.options.map((opt:IOptions) => <option key={opt.value} value={opt.value}>{opt.label}</option>)}\n            </select>\n          </label>\n           : !(elem.hasInput === false) ? <Input ref={ref ? ref[elem.stateId] : React.createRef()} \n            defaultValue={getCurrentStateName(currentFormValue, elem.stateId)}\n            name={elem.stateId} type={elem.type || \"text\"} placeholder={elem.placeholder} meta={elem} {...props} /> : elem.contextValue ? \n            <MonthlyField monthlyPay={monthlyPay}/>\n            : null\n        ) : null\n      }\n      \n      { elem.child ? (<p>{elem.hint}</p>) : null }\n      </p> : null);\n  });","import React, { MouseEventHandler } from 'react';\n\nexport type ButtonProps = {\n    action?: string,\n    name?: string,\n    onClick?: MouseEventHandler<any>,\n    service?: any,\n    send?: any,\n    current?: any,\n    hideArrow?: boolean,\n    styles?: any,\n}\n\nexport type GlobalMeta = {\n    primaryColor?: string,\n    secondaryColor?: string,\n    backgroundColor?: string,\n    textColor?: string,\n    disableColor?: string,\n    button?: any,\n}\n\nexport const Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n    const {service} = props;\n    const style: GlobalMeta = service && service.parent ? service.parent.machine.meta : service.machine.meta;\n    return  <div style={{position: 'relative', ...props.styles}}>\n        <button onClick={props.onClick ? props.onClick : () => {\n        props.action ? props.send(props.action) : console.log()\n    }} style={style ? {\n        backgroundColor: style.primaryColor,\n        color: style.backgroundColor, \n        ...style.button,\n    } : null}>\n            {props.name || 'Send'}\n        </button>\n        {!props.hideArrow ? <span className=\"button-arrow slide-right\"></span> : null }\n    </div>\n}","import React from \"react\";\n\nexport const Spinner: React.FC = () => {\n    return <div style={{\n        display: 'flex',\n        alignItems: 'center'\n    }}>\n        <div id=\"spinner\">\n            <div className=\"spinner-child first\" />\n            <div className=\"spinner-child second\" />\n            <div className=\"spinner-child third\" />\n            <div className=\"spinner-child fourth\" />\n        </div>\n    </div>\n};","import React from 'react';\nimport { Button } from './Button';\nimport { meta, buttonName } from \"./FormService\";\n \nexport const ContinueButton: any = (props: any) => {\n    const {current, service, childRefs } = props;\n    const _meta = meta(current, service);\n    const currentIndex = current.context.currentIndex;\n    const stacks = current.context.stacks;\n\n    return <Button {...props} onClick={async(event) => {\n      event.preventDefault();\n        const values: any[] = Object.keys(childRefs).reduce((prev: any, key: string) => {\n            const keys = key.split('.');\n            const childKeys = Object.keys(childRefs[key]);\n            if(childKeys.length > 1) {\n              const parentRef = childRefs[key];\n              const cKeys = childKeys.reduce((p: any, current: string) => {\n                const currentK = current.split('.');\n                return {\n                  ...p,\n                  [currentK[currentK.length - 1]]: parentRef[current].current ? parentRef[current].current.value : ''\n                }\n              }, {});\n              return {\n                ...prev,\n                [keys[keys.length - 1]]: cKeys\n              }\n            }\n            return {\n              ...prev,\n              [keys[keys.length - 1]]: childRefs[key].current ? childRefs[key].current.value : ''\n            }\n          }, {});\n          current && current.context ? (current.context.formValue as any)[_meta.name] = values : console.log('');\n          let obj: any = {};\n          obj[_meta.name] = {\n            values, \n            state: current\n          };\n          service.send(currentIndex === stacks.length ? \"CONTINUE\" : \"NEXT\", {values: obj});\n    }} name={currentIndex === stacks.length ? buttonName(current, service) : 'NEXT'} styles={currentIndex > 0 ? {flex: 1} : {width: '200px'}}/>\n}","import React from 'react';\nimport {Button, ButtonProps} from './Button';\nimport { meta, buttonName } from \"./FormService\";\n \nexport const UploadButton: any = (props: ButtonProps) => {\n    const { current, service } = props;\n    const _meta = meta(current, service);\n    const currentIndex = current.context.currentIndex;\n    const stacks = current.context.stacks;\n\n    return <Button {...props} onClick={async(event) => {\n        event.preventDefault();\n        let obj: any = {};\n        obj[_meta.name] = {\n            values: (current.context.formValue as any)[_meta.name], \n            state: current\n        };\n        service.send(currentIndex === stacks.length ? \"CONTINUE\" : \"NEXT\", {values: obj});\n    }} name={currentIndex === stacks.length ? buttonName(current, service) : 'NEXT'} styles={currentIndex > 0 ? {flex: 1} : {width: '200px'}} />\n}","import React from \"react\";\nimport { meta, fieldTitle } from \"./FormService\";\nimport { FieldGroup } from \"./FieldGroup\";\nimport { Button } from \"./Button\";\nimport { isString } from \"util\";\nimport { IChildRef, HintType } from \"../lib/Types\";\nimport { isRequestState } from \"../lib/Utils\";\nimport { Spinner } from './Spinner';\nimport { ContinueButton } from \"./ContinueButton\";\nimport { UploadButton } from \"./UploadButton\";\n  \nexport default class Field extends React.Component<any, {}, any> {\n    childRefs: IChildRef;\n    fieldSetEnd: any;\n    isUploadFile: boolean;\n    \n    constructor(props: any) {\n      super(props)\n      this.childRefs = {};\n      this.isUploadFile = false;\n      this._setDefaultChildRefs();\n    }\n\n    scrollToBottom = () => {\n      if(this.fieldSetEnd) {\n        this.fieldSetEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n\n    componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  \n    componentWillUpdate() {\n      this._setDefaultChildRefs();\n    }\n\n    _setDefaultChildRefs = () => {\n      const { service } = this.props;\n      const _meta = meta(service.state, service);\n      \n      this.childRefs = _meta.child && _meta.child.length ? _meta.child.reduce((previousValue: any, currentValue: any, index: number) => {\n        const {stateId} = currentValue;\n        \n        if(currentValue.child && currentValue.child.length) {\n          const {child} = currentValue;\n          const childRefs = child.map((c: any) => {\n            const childStateId = c.stateId;\n            if(c && c.options) {\n              return {\n                childStateId,\n                ref:React.createRef<HTMLSelectElement>()\n              }\n            } else {\n              if(c.type && c.type === 'file') {\n                this.isUploadFile = true;\n              }\n              return {\n                childStateId,\n                ref: React.createRef<HTMLInputElement>()\n              }\n            }\n          }).reduce((prev: any, current: any) => {\n            return {\n              ...prev,\n              [current['childStateId']]: current['ref'],\n            };\n          }, {})\n          previousValue[stateId] = childRefs\n          \n        } else {\n          if(currentValue && currentValue.options) {\n            previousValue[stateId] = React.createRef<HTMLSelectElement>();\n          } else {\n            if(currentValue.type && currentValue.type === 'file') {\n              this.isUploadFile = true;\n            }\n            previousValue[stateId] = React.createRef<HTMLInputElement>();\n          }\n        }\n\n        \n        return previousValue;\n      }, {}) : {};\n    }\n    \n    send(eventName: string, payload: {}) {\n      this.props.service.send(eventName, payload)\n    }\n\n    formatHint() {\n      const { service, current } = this.props;\n      const _meta = meta(current, service);\n      const hint: String | HintType[] = _meta.hint;\n      if(!hint) return null;\n      return isString(hint) ? hint : (hint as HintType[]).map((h: HintType, index: number) => {\n        return h.action ? <button key={index} onClick={() => this.send(h.action, {})}>{h.label}</button> : <span key={index}>{h.label}</span>\n      });\n    }\n  \n    render() {\n      const { service, current } = this.props;\n      const _meta = meta(current, service);\n      const _fieldTitle = fieldTitle(current, service);\n      const _subTitle = _meta.subTitle;\n      if ((!current.matches(\"field\") || _meta.options) && !service.parent) return null\n      if(isRequestState(current)) return <Spinner />;\n      const currentIndex = current.context.currentIndex;\n      const stacks = current.context.stacks;\n      let machine = service.machine;\n      if(service.parent) {\n        machine = service.parent.machine;\n      }\n      return <fieldset name={_meta.name}>\n        {_fieldTitle ? <legend style={{...machine.meta.title}}>{_fieldTitle}</legend> : null}\n        <fieldset style={{\n        }} className={currentIndex === stacks.length ? 'field__wrapper field__wrapper-current' : 'field__wrapper'}>\n          {_subTitle ? <legend><label style={{...machine.meta.subTitle}} htmlFor={_meta.subTitle}>{_meta.subTitle}</label></legend> : null}\n          <FieldGroup ref={this.childRefs} name={_meta.name} service={service} current={current}></FieldGroup>\n          {this.formatHint() ? <><aside>{this.formatHint()}</aside></> : null}\n        </fieldset>\n        <p style={{\n          display: 'flex',\n          justifyContent: currentIndex > 0 ? 'space-between' : 'flex-end'\n        }}>\n          { currentIndex > 0 ? <Button onClick={() => {\n            this.send(\"PREV\", {});\n          }} name={\"PREV\"} service={service} hideArrow={true} styles={{flex: 1}} /> : null }\n          { currentIndex > 0 ? <div style={{width: '10px'}}></div>: null}\n          \n          {this.isUploadFile ? <UploadButton {...this.props} /> : <ContinueButton {...this.props} childRefs={this.childRefs} /> }\n        </p>\n        <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.fieldSetEnd = el; }}>\n        </div>\n      </fieldset>\n    }\n}","import React from \"react\";\nimport { historyMeta } from \"./FormService\";\nimport { FieldGroup } from \"./FieldGroup\";\nimport { isString } from \"util\";\nimport { IChildRef, HintType } from \"../lib/Types\";\n\nexport default class HistoryField extends React.Component<any, {}, any> {\n  childRefs: IChildRef;\n  \n  constructor(props: any) {\n    super(props)\n    this.childRefs = {};\n  }\n  \n  componentWillUpdate() {\n    const { service, history } = this.props;\n    const _meta = historyMeta(history, service);\n    this.childRefs = _meta.child && _meta.child.length ? _meta.child.reduce((previousValue: any, currentValue: any, index: number) => {\n      const {stateId} = currentValue;\n        \n      if(currentValue.child && currentValue.child.length) {\n        const {child} = currentValue;\n        const childRefs = child.map((c: any) => {\n          const childStateId = c.stateId;\n          if(c && c.options) {\n            return {\n              childStateId,\n              ref:React.createRef<HTMLSelectElement>()\n            }\n          } else {\n            return {\n              childStateId,\n              ref: React.createRef<HTMLInputElement>()\n            }\n          }\n        }).reduce((prev: any, current: any) => {\n          return {\n            ...prev,\n            [current['childStateId']]: current['ref'],\n          };\n        }, {})\n        previousValue[stateId] = childRefs\n        \n      } else {\n        if(currentValue && currentValue.options) {\n          previousValue[stateId] = React.createRef<HTMLSelectElement>();\n        } else {\n          previousValue[stateId] = React.createRef<HTMLInputElement>();\n        }\n      }\n\n      \n      return previousValue;\n    }, {}) : {};\n  }\n    \n  send(eventName: string, payload: {}) {\n    this.props.service.send(eventName, payload)\n  }\n\n  formatHint() {\n    const { history, service } = this.props;\n    const _meta = historyMeta(history, service);\n    const hint: String | HintType[] = _meta.hint;\n    if(!hint) return null;\n    return isString(hint) ? hint : (hint as HintType[]).map((h: HintType, index: number) => {\n      return h.action ? <button key={index} onClick={() => this.send(h.action, {})}>{h.label}</button> : <span key={index}>{h.label}</span>\n    });\n  }\n  \n  render() {\n    const { service, current, history, index } = this.props;\n    const hideHistories = ['welcome', 'complete', 'invalid'];\n    if (!history || !current.matches(\"field\") || hideHistories.indexOf(history.value) > -1) return null\n    history.toStrings = current.toStrings;\n    const currentIndex = current.context.currentIndex;\n    const _meta = historyMeta(history, service);\n    console.log(_meta);\n    const _hint = this.formatHint();\n    return <fieldset name={_meta.name}>\n      <legend style={{...service.machine.meta.title}}>{_meta.title}</legend>\n      <fieldset style={{\n        backgroundColor: currentIndex === index ? 'yellow' : service.machine.meta.secondaryBackgroundColor, \n        margin: '10px 0',\n        padding: '12px',\n        borderRadius: '6px'\n      }}>\n        <legend style={{...service.machine.meta.subTitle}}>{_meta.subTitle}</legend>\n        <FieldGroup ref={this.childRefs} name={_meta.name} service={service} current={history} isHistory={true}></FieldGroup>\n        {_hint ? <p>{_hint}</p> : null }\n      </fieldset>\n    </fieldset>\n  }\n}","import { Machine } from \"xstate\";\nimport { escalate } from \"xstate/lib/actions\";\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\nconst requestOTP = () => {\n    if(isTestMode) {\n        return new Promise(resolve =>  setTimeout(resolve, 10))\n    }\n    return fetch('http://localhost:3001/otp/request', {\n        method: 'post'\n    }).then(response => response.json());\n}\n\nexport const OTPAskingMachine = Machine({\n    initial: 'requesting',\n    states: {\n        requesting: {\n            invoke: {\n                id: 'request-otp',\n                src: () => requestOTP(),\n                onDone: 'success',\n                onError: 'error'\n            }\n        },\n        success: {\n            type: 'final'\n        },\n        error: {\n            type: 'final',\n            onEntry: escalate('cannot get OTP')\n        }\n    }\n})","import { Machine } from \"xstate\";\nimport { escalate } from \"xstate/lib/actions\";\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\nconst checkOTP = (otp: String) => {\n    if(isTestMode) {\n        return new Promise((resolve, reject) =>  resolve({'isValidOtp': true}))\n    }\n    return fetch(`http://localhost:3001/otp/check/${otp}`).then(response => response.json());\n}\n\nexport const OTPConfirmMachine = Machine({\n    initial: 'waitingForCode',\n    states: {\n        waitingForCode: {\n            on: {\n                CODE: 'checkOTP'\n            }\n        },\n        checkOTP: {\n            invoke: {\n                id: 'check-otp',\n                src: (otp: String) => checkOTP(otp),\n                onDone: [\n                    {\n                        target: 'success', \n                        cond: (context: any, event: any) => {\n                            const {isValidOtp} = event.data;\n                            return isValidOtp;\n                        }\n                    },\n                    {\n                        target: 'error'\n                    }\n                ],\n                onError: 'error'\n            }\n        },\n        success: {\n            type: 'final'\n        },\n        error: {\n            type: 'final',\n            onEntry: escalate({isValidOtp: false})\n        }\n    }\n})","import { Machine } from \"xstate\";\nimport { escalate } from \"xstate/lib/actions\";\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\nconst resendOTP = () => {\n    if(isTestMode) {\n        return new Promise(resolve =>  setTimeout(resolve, 10))\n    }\n    return fetch('http://localhost:3001/otp/resend', {\n        method: 'post'\n    }).then(response => response.json());\n}\n\nexport const OTPResendMachine = Machine({\n    initial: 'resending',\n    states: {\n        resending: {\n            invoke: {\n                id: 'resend-otp',\n                src: () => resendOTP(),\n                onDone: 'success',\n                onError: 'error'\n            }\n        },\n        success: {\n            type: 'final'\n        },\n        error: {\n            type: 'final',\n            onEntry: escalate('cannot get OTP')\n        }\n    }\n})","import { Machine } from \"xstate\";\nimport { OTPAskingMachine } from \"./OTPAskingMachine\";\nimport { OTPConfirmMachine } from './OtpConfirmMachine';\nimport { send, assign, escalate } from \"xstate/lib/actions\";\nimport { OTPResendMachine } from \"./OTPResendMachine\";\nimport { OCBContext } from \"../forms/ocb\";\n\nconst CONFIRM_DELAY_TIME = process.env.REACT_APP_MODE !== 'test' ? 125000 : 100;\nconst TTS_DELAY_TIME = process.env.REACT_APP_MODE !== 'test' ? 185000 : 100;\n// const FINAL_TTS_DELAY_TIME = 300000;\n\nconst otpConfirm = {\n    after: {\n      [CONFIRM_DELAY_TIME]: 'callOTP'\n    },\n    on: {\n      CONTINUE: {\n        target: 'confirming',\n        actions: assign<any, any>({\n          otp: (context: OCBContext, event: any) => {\n            const {values} = event;\n            return values['otpConfirm']['values']['otp'];\n          }\n        })\n      },\n    },\n    meta: {\n      title: 'Xác thực mã OTP',\n      name: 'otpConfirm',\n      subTitle: 'Mã xác thực OTP đã được gửi đến số điện thoại của bạn. Vui lòng nhập mã trong vòng 2 phút'\n    },\n    initial: 'otp',\n    states: {\n      otp: {\n        meta: {\n          title: '',\n          placeholder: '****',\n          validate: {\n            minLength: 4,\n            maxLength: 4\n          },\n          autocomplete: 'one-time-code'\n        },\n      }\n    },\n  }\n  \nconst callOTP = {\n  after: {\n      [TTS_DELAY_TIME]: 'timeout'\n  },\n  on: {\n    CONTINUE: {\n      target: 'confirming',\n      actions: 'updateStacks'\n    },\n    RESEND: 'resending',\n  },\n  meta: {\n    title: 'Xác thực mã OTP',\n    name: 'otpConfirm',\n    subTitle: 'Mã xác thực OTP đã được gửi thông qua cuộc gọi từ tổng đài. Vui lòng nhập mã trong vòng 3 phút',\n    hint: [\n      {\n        label: 'Không nhận được OTP?'\n      },\n      {\n        label: 'Gửi lại',\n        action: 'RESEND'\n      }\n    ]\n  },\n  initial: 'otp',\n  states: {\n    otp: {\n      meta: {\n        title: '',\n        placeholder: '****',\n        validate: {\n          minLength: 4,\n          maxLength: 4\n        },\n        autocomplete: 'one-time-code'\n      },\n      \n    }\n  }\n}\n\nexport const OTPMachine = Machine({\n    id: 'otp-machine',\n    initial: 'idle',\n    states: {\n        idle: {\n            on: {\n                CODE: 'asking'\n            }\n        },\n        asking: {\n            invoke: {\n                id: 'receive-otp',\n                src: OTPAskingMachine,\n                onDone: 'otpConfirm',\n                onError: 'resending'\n            }\n        },\n        resending: {\n          invoke: {\n              id: 'resend-otp',\n              src: OTPResendMachine,\n              onDone: 'otpConfirm',\n              onError: 'resending'\n          }\n        },\n        confirming: {\n            invoke: {\n                id: 'confirm-otp',\n                src: OTPConfirmMachine,\n                data: (context: any) => process.env.REACT_APP_MODE !== 'test' ? context.otp : '0000',\n                onDone: 'success',\n                onError: 'otpConfirm'\n            }, \n            entry: send('CODE', {to: 'confirm-otp'})\n        },\n        otpConfirm: otpConfirm,\n        callOTP: callOTP,\n        success: {\n            type: 'final'\n        },\n        error: {\n\n      },\n      timeout: {\n        on: {\n          RETRY: 'asking',\n          EXIT: {\n            actions: escalate('ERROR', {delay: 1})\n          }\n        }\n      }\n    },\n})","import {Machine, assign} from 'xstate';\nimport { OCBContext } from \"../forms/ocb\";\n\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\n\nconst uploadFile = async (context: OCBContext) => {\n    if(isTestMode) {\n        return new Promise(resolve => setTimeout(resolve, 10));\n    }\n    const data = new FormData();\n\n    const { currentIndex, stacks, formValue } = context;\n    const formValueKey = Object.keys(stacks[currentIndex - 1])[0];\n    const values = formValue[formValueKey];\n        \n    const keys = Object.keys(values);\n    keys.forEach((key: string) => {\n        data.append('myFiles', values[key]);\n    })\n    \n    return fetch('http://localhost:3001/uploadmultiple', {\n        method: 'post',\n        body: data\n    }).then(response => response.json());\n}\n\nexport const UploadMachine = Machine({\n    id: 'upload-machine',\n    initial: 'uploading',\n    states: {\n        uploading: {\n            invoke: {\n                id: 'uploading',\n                src: (context: OCBContext) => uploadFile(context),\n                onDone: {\n                    actions: 'updateFormValue',\n                    target: 'success'\n                },\n                onError: 'error'\n            }\n        },\n        success: {\n            type: 'final'\n        },\n        error: {\n            \n        }\n    }\n}, {\n    actions: {\n        updateFormValue: assign<OCBContext, any>({\n            formValue: (context: OCBContext, event: any) => {\n                const { currentIndex, stacks, formValue } = context;\n                const formValueKey = Object.keys(stacks[currentIndex - 1])[0];\n                const oldFiles = formValue[formValueKey];\n                const newUploadedFiles = event.data;\n                formValue[formValueKey] = Object.keys(oldFiles).reduce((prev: any, curr: any) => {\n                    return {\n                        ...prev,\n                        [curr] : newUploadedFiles.filter((uploadFile: any) => uploadFile.originalname === oldFiles[curr]['name'])[0]\n                    }\n                }, {});\n                return formValue;\n            }\n        })\n    }\n})","import { Machine } from \"xstate\";\nimport { OCBContext } from \"../forms/ocb\";\nimport { escalate, log } from \"xstate/lib/actions\";\nimport { UploadMachine } from \"./UploadMachine\";\n\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\n\nconst idOCR = (context: OCBContext) => {\n    if(isTestMode) {\n        return new Promise(resolve => setTimeout(resolve, 10));\n    }\n\n    const idCard = context.formValue['idCard'];\n\n    const headers = new Headers();\n    // headers.append() : Add some header to send to PCO\n    return fetch('https://localhost:3001/id/ocr', {\n        method: 'post',\n        body: JSON.stringify({\n            idCard\n        }),\n        headers: headers\n    }).then(response => response.json());\n}\n\nexport const IDOCRMachine = Machine({\n    id: 'id-ocr',\n    initial: 'uploading',\n    states: {\n        uploading: {\n            invoke: {\n                id: 'uploading',\n                src: UploadMachine,\n                data: (context: any) => context,\n                onDone: 'requesting'\n            }\n        },\n        requesting: {\n            entry: log('on requesting'),\n            invoke: {\n                id: 'invoke-ocr',\n                src: (context: OCBContext) => idOCR(context),\n                onDone: 'finish',\n                onError: {\n                    actions: escalate('Cannot get ID')\n                }\n            }\n        },\n        finish: {\n            type: 'final'\n        }\n    }\n})","import { Machine } from \"xstate\";\nimport { OCBContext } from \"../forms/ocb\";\nimport { escalate } from \"xstate/lib/actions\";\nimport { UploadMachine } from \"./UploadMachine\";\n\nconst isTestMode = process.env.REACT_APP_MODE === 'test';\n\nconst dlOCR = (context: OCBContext) => {\n    if(isTestMode) {\n        return new Promise(resolve => setTimeout(resolve, 10));\n    }\n    const url = context.formValue['driverLicense'];\n    const headers = new Headers();\n    // headers.append() : Add some header to send to PCO\n    return fetch('https://localhost:3001/dl/ocr', {\n        method: 'post',\n        body: JSON.stringify({\n            url: url\n        }),\n        headers: headers\n    }).then(response => response.json());\n}\n\nexport const DLOCRMachine = Machine({\n    id: 'id-ocr',\n    initial: 'uploading',\n    states: {\n        uploading: {\n            invoke: {\n                id: 'uploading',\n                src: UploadMachine,\n                data: (context: any) => context,\n                onDone: 'requesting'\n            }\n        },\n        requesting: {\n            invoke: {\n                id: 'invoke-ocr',\n                src: (context: OCBContext) => dlOCR(context),\n                onDone: 'finish',\n                onError: {\n                    actions: escalate('Cannot get information from DL')\n                }\n            }\n        },\n        finish: {\n            type: 'final'\n        }\n    }\n})","import { Machine } from 'xstate';\nimport { assign, send } from 'xstate/lib/actions';\nimport { validateEmail, validatePhoneNumber, validateID, checkExpireIdDay } from '../../components/Validation';\nimport { EMI } from '../../lib/Utils';\nimport { OTPMachine } from '../../machines/OtpMachine';\nimport { IDOCRMachine } from '../../machines/IDOCRMachine';\nimport { DLOCRMachine } from '../../machines/DLOCRMachine';\nimport { UploadMachine } from '../../machines/UploadMachine';\n\nexport interface IOptions {\n  label: string,\n  value: any\n}\n\nconst genArr = (from: number, to: number, suffix: string) => {\n  let results: IOptions[] = [];\n  for (let i = from; i <= to; i++) {\n    results.push({\n      label: i + ' ' + suffix,\n      value: i\n    });  \n  }\n\n  return results;\n}\n\nexport const OCB_CONSTANTS = {\n  LONG_SCALE: 1000000,\n  INSURANCE_RATE: 0.055,\n  MIN_LOAN_AMOUNT: 10,\n  MAX_LOAN_AMOUNT: 30,\n  MIN_LOAN_TENOR: 12,\n  MAX_LOAN_TENOR: 24,\n  INTEREST_RATE: 0.42\n}\n\nexport interface OCBContext {\n  formValue: any,\n  monthlyPay: number,\n  loanAmount: number,\n  loanDuration: number,\n  currentIndex: number,\n  stacks: [],\n  otp: string,\n  isAlreadyConfirmed: boolean\n}\n\nconst parallel: 'atomic' | 'compound' | 'parallel' | 'final' | 'history' = \"parallel\";\n\nconst packageField = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'primaryInfo',\n      cond: 'packageValid',\n      actions: 'updateStacks'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    title: 'Đầu tiên, số tiền bạn cần?',\n    name: 'package',\n    buttonName: 'Đồng ý',\n    hint: 'Kết quả có thể chênh lệch nhỏ so với thực tế'\n  },\n  states: {\n    amount: {\n      meta: {\n        title: 'Khoản vay',\n        name: 'UPDATE_AMOUNT',\n        options: genArr(OCB_CONSTANTS.MIN_LOAN_AMOUNT, OCB_CONSTANTS.MAX_LOAN_AMOUNT, 'triệu'),\n        onChange: {\n          name: 'CHANGE',\n          field: 'monthlyPay'\n        }\n      }\n    },\n    tenor: {\n      meta: {\n        title: 'Kỳ hạn',\n        name: 'UPDATE_DURATION',\n        options: genArr(OCB_CONSTANTS.MIN_LOAN_TENOR, OCB_CONSTANTS.MAX_LOAN_TENOR, 'tháng'),\n        onChange: {\n          name: 'CHANGE',\n          field: 'monthlyPay'\n        },\n      }\n    },\n    monthlyPay: {\n      meta: {\n        title: 'Khoản trả ước tính mỗi tháng',\n        hasInput: false,\n        readOnly: true,\n        contextValue: 'monthlyPay'\n      }\n    }\n  },\n}\n\nconst primaryInfo = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'otp',\n      cond: 'otpValid',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    title: 'Để bắt đầu, hãy cung cấp thông tin liên lạc của bạn',\n    name: 'primaryInfo',\n    buttonName: 'Gửi mã xác nhận',\n    hint: 'Bằng việc nhấn \"Tiếp tục\", bạn đồng ý rằng bạn đã đọc, hiểu rõ và đồng ý với Chính sách bảo mật và các Điều kiện và điều khoản của chúng tôi'\n  },\n  initial: 'name',\n  states: {\n    fullName: {\n      meta: {\n        title: 'Họ tên',\n        placeholder: 'Nguyễn Văn Nam',\n        validate: {\n          minLength: 2\n        },\n        autocomplete: 'name'\n      },\n    },\n    email: {\n      meta: {\n        title: 'Địa chỉ email',\n        type: 'email',\n        placeholder: 'nguyenvannam@gmail.com'\n      }\n    },\n    phoneNumber: {\n      meta: {\n        title: 'Điện thoại',\n        hint: 'Chúng tôi sẽ gửi mã xác thực đến số điện thoại này',\n        type: 'tel',\n        countryCode: 'VN'\n      }\n    },\n    loanPurpose: {\n      meta: {\n        title: 'Mục đích vay',\n        options: [{\n          label: \"Du lịch\",\n          value: 'travel'\n        }, {\n          label: \"Ăn uống\",\n          value: 'food'\n        }, {\n          label: \"Mua sắm\",\n          value: 'shopping'\n        }]\n      }\n    }\n  }\n}\n\nconst profile = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'address',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    subTitle: 'Hãy điền những thông tin sau đây để chúng tôi hiểu rõ bạn hơn ',\n    buttonName: 'Tiếp theo',\n    name: 'profile',\n  },\n  states: {\n    educationLevel: {\n      meta: {\n        title: 'Trình độ học vấn',\n        options: [{\n          label: \"Đại học\",\n          value: 'university'\n        }, {\n          label: \"Cao đẳng\",\n          value: 'colleage'\n        }]\n      }\n    },\n    maritalStatus: {\n      meta: {\n        title: 'Tình trạng hôn nhân',\n        options: [{\n          label: \"Kết hôn\",\n          value: 'married'\n        }, {\n          label: \"Độc thân\",\n          value: 'single'\n        }, {\n          label:  \"Goá\",\n          value: 'widow'\n        }]\n      }\n    },\n    noOfDependents: {\n      meta: {\n        title: 'Số người phụ thuộc'\n      }\n    }\n  }\n}\n\nconst address = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'additionInfo',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    subTitle: 'Hãy điền địa chỉ nơi bạn đang cư trú',\n    buttonName: 'Tiếp tục',\n    name: 'address',\n  },\n  states: {\n    city: {\n      meta: {\n        title: 'Tỉnh/Thành Phố',\n        placeholder: 'Vui lòng chọn',\n        autocomplete: 'address-level2'\n      }\n    },\n    district: {\n      meta: {\n        title: 'Quận/Huyện',\n        placeholder: 'Vui lòng chọn',\n        autocomplete: 'address-level3'\n      }\n    },\n    ward: {\n      meta: {\n        title: 'Phường/Xã',\n        placeholder: 'Vui lòng chọn'\n      }\n    },\n    hamlet: {\n      meta: {\n        title: 'Thôn/Xóm/Khu phố',\n        placeholder: 'Vui lòng điền',\n  optional: true\n      }\n    },\n    street: {\n      meta: {\n        title:'Tên đường',\n        placeholder: 'Vui lòng điền',\n  optional: true,\n        autocomplete: 'street-address'\n      }\n    },\n    unitNo: {\n      meta: {\n        title: 'Số nhà',\n        placeholder: 'Vui lòng điền',\n        optional: true\n        }\n      },\n      apartmentName: {\n        meta: {\n          title: 'Tên căn hộ',\n          placeholder: 'Vui lòng điền',\n    optional: true\n        }\n      },\n      isPermanentAddress: {\n        meta: {\n          type: 'radio',\n          title: 'Đây cũng là địa chỉ thường trú?',\n          values: [\n            {\n              label: 'Chính xác',\n              value: \"yes\"\n            },\n            {\n              label: 'Không phải',\n              value: \"no\"\n            }\n          ]\n        },\n      ownership: {\n        meta: {\n          title: 'Hình thức sở hữu',\n          options: [{\n            label: 'Sở hữu',\n            value: 'owner'\n          }, {\n            label: 'Cho thuê',\n            value: 'rent'\n          }]\n        }\n      },\n      liveFrom: {\n        meta: {\n          title: 'Bạn sống tại đây từ',\n          states: {\n            month: {\n              meta: {\n                options: genArr(1, 12, '')\n              }\n            },\n            year: {\n              meta: {\n                options: genArr(1900, 2020, ' nam')\n              }\n            }\n          }\n        }\n      },\n      homePhone: {\n        meta: {\n          title: 'Điện thoại bàn',\n          placeholder: 'Vui lòng điền',\n          optional: true,\n          type: 'tel'\n        }\n      }\n    }\n  }\n}\n\nconst additionInfo = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'job',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  initial: 'ownership',\n  meta: {\n    title: '',\n    subTitle: 'Một vài thông tin bổ sung',\n    name: 'additionInfo'\n  },\n  states: {\n    ownership: {\n      meta: {\n        title: 'Hình thức sở hữu',\n        options: [{\n          label: 'Sở hữu',\n          value: 'owner'\n        }, {\n          label: 'Cho thuê',\n          value: 'rent'\n        }]\n      }\n    },\n    liveFrom: {\n      meta: {\n        title: 'Bạn sống ở đây từ',\n        states: {\n          month: {\n            meta: {\n              options: genArr(1, 12, '')\n            }\n          },\n          year: {\n            meta: {\n              options: genArr(1900, 2020, ' nam')\n            }\n          }\n        }\n      }\n    },\n    homePhone: {\n      meta: {\n        title: 'Điện thoại bàn (nếu có)',\n        placeholder: '090909090',\n        type: 'tel'\n      }\n    }\n  }\n}\n\nconst job = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'workplace',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  initial: 'state',\n  meta: {\n    title: '',\n    name: 'job'\n  },\n  states: {\n    state: {\n      meta: {\n        title: 'Tình trạng công viêc',\n        options: [{\n          label: \"Làm hưởng lương\",\n          value: 'employee'\n        }, {\n          label: \"Chủ doanh nghiệp\",\n          value: 'businessOwner'\n        }, {\n          label: \"Kinh doanh hộ gia đình\",\n          value: 'householdBusinessOwner'\n        }]\n      }\n    },\n    employee: {\n      type: parallel,\n      meta: {\n        title: 'Làm hưởng lương',\n        showWhen: {\n          field: 'state',\n          value: 'employee'\n        }\n      },\n      initial: 'businessType',\n      states: {\n        businessType: {\n          meta: {\n            title: 'Loại doanh nghiệp'\n          }\n        },\n        companyName: {\n          meta: {\n            title: 'Tên công ty',\n            autocomplete: 'organization'\n          }\n        },\n        industry: {\n          meta: {\n            title: 'Ngành kinh doanh'\n          }\n        },\n        companyPhoneNumber: {\n          meta: {\n            title: 'Số điện thoại công ty',\n            type: 'tel'\n          }\n        },\n        occupation: {\n          meta: {\n            title: 'Chức vụ'\n          }\n        },\n        contractType: {\n          meta: {\n            title: 'Loại hợp đồng'\n          }\n        },\n        workingExpCurrent: {\n          meta: {\n            title: 'Số năm làm việc tại công ty'\n          }\n        }\n      },\n    },\n    businessOwner: {\n      type: parallel,\n      meta: {\n        title: 'Chủ doanh nghiệp',\n        showWhen: {\n          field: 'state',\n          value: 'businessOwner'\n        }\n      },\n      initial: 'businessType',\n      states: {\n        businessType: {\n          meta: {\n            title: \"Loại doanh nghiệp\"\n          }\n        },\n        businessName: {\n          meta: {\n            title: 'Tên doanh nghiệp',\n            autocomplete: 'organization'\n          }\n        },\n        industry: {\n          meta: {\n            title: 'Ngành nghề kinh doanh'\n          }\n        },\n        companyPhoneNumber: {\n          meta: {\n            title: 'Số điện thoại công ty',\n            type: 'tel'\n          }\n        },\n        noOfYearsBusiness: {\n          meta: {\n            title: 'Số năm kinh doanh'\n          }\n        }\n      },\n    },\n    householdBusinessOwner: {\n      type: parallel,\n      meta: {\n        title: 'Kinh doanh hộ gia đình',\n        showWhen: {\n          field: 'state',\n          value: 'householdBusinessOwner'\n        }\n      },\n      initial: 'householdBusinessName',\n      states: {\n        householdBusinessName: {\n          meta: {\n            title: 'Tên doanh nghiệp',\n            autocomplete: 'organization'\n          }\n        },\n        industry: {\n          meta: {\n            title: 'Ngành nghề kinh doanh'\n          }\n        },\n        companyPhoneNumber: {\n          meta: {\n            title: 'Số điện thoại doanh nghiệp',\n            type: 'tel'\n          }\n        },\n        noOfYearsBusiness: {\n          meta: {\n            title: 'Số năm kinh doanh'\n          }\n        }\n      }\n    }\n  }\n}\n\nconst workplace = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'income',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    subTitle: 'Điạ chỉ nơi làm việc',\n    name: 'workplace'\n  },\n  states: {\n    isCurrent: {\n      meta: {\n        title: 'Giống điạ chỉ hiện tại',\n        type: 'radio',\n        values: [\n          {\n            label: 'Đúng rồi',\n            value: \"yes\"\n          },\n          {\n            label: 'Không phải',\n            value: \"no\"\n          }\n        ]\n      }\n    },\n    city: {\n      meta: {\n        title: 'Tỉnh/Thành Phố',\n        placeholder: 'TP. Hồ Chí Minh',\n        autocomplete: 'address-level2'\n      }\n    },\n    district: {\n      meta: {\n        title: 'Quận/ Huyện',\n        placeholder: 'Quận 4'\n      }\n    },\n    ward: {\n      meta: {\n        title: 'Phường/Xã',\n        placeholder: 'Phường 12'\n      }\n    },\n    hamlet: {\n      meta: {\n        title: 'Hẻm',\n        placeholder: 'Hẻm...'\n      }\n    },\n    street: {\n      meta: {\n        title:' Tên Đường',\n        placeholder: 'Đoàn Văn Bơ',\n        autocomplete: 'street-address'\n      }\n    },\n    unitNo: {\n      meta: {\n        title: 'Số nhà',\n        placeholder: '12'\n      }\n    },\n    isRegular: {\n      meta: {\n        type: 'radio',\n        title: 'Đây cũng là địa chỉ thường trú ?',\n        values: [\n          {\n            label: 'Đúng rồi',\n            value: \"yes\"\n          },\n          {\n            label: 'Không phải',\n            value: \"no\"\n          }\n        ]\n      }\n    }\n  }\n}\n\nconst income = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'bankAccount',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    subTitle: 'Nói thêm về tình hình tài chính của bạn',\n    name: 'income'\n  },\n  states: {\n    monthlyIncome: {\n      meta: {\n        title: 'Thu nhập bình quân hàng tháng'\n      },\n    },\n    monthlyExpense: {\n      meta: {\n        title: 'Chi phí cá nhân'\n      }\n    },\n    noOfCurrentLoan: {\n      meta: {\n        title: 'Khoản vay hiện có'\n      }\n    },\n    noOfCreditCard: {\n      meta: {\n        title: 'Số lượng thẻ tín dụng',\n        type: 'number'\n      }\n    }\n  }\n}\n\nconst bankAccount = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'references',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    subTitle: 'Để nhận tiền nhanh nhất, vuio lòng cung cấp chính xác thông tin tài khoản của bạn.',\n    name: 'bankAccount'\n  },\n  initial: 'accountHolder',\n  states: {\n    accountHolder: {\n      meta: {\n        title: 'Chủ tài khoản'\n      }\n    },\n    accountNumber: {\n      meta: {\n        title: 'Số tài khoản'\n      }\n    },\n    bankName: {\n      meta: {\n        title: 'Ngân hàng'\n      }\n    },\n    branch: {\n      meta: {\n        title: 'Chi nhánh'\n      }\n    },\n    city: {\n      meta: {\n        title: 'Thành phố',\n        autocomplete: 'address-level2'\n      }\n    }\n  }\n}\n\nconst references = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'idCard',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  initial: 'first',\n  meta: {\n    title: '',\n    name: 'references'\n  },\n  states: {\n    first: {\n      type: parallel,\n      meta: {\n        title: 'Thông tin người tham chiếu thứ nhất',\n      },\n      initial: 'title',\n      states: {\n        title: {\n          meta: {\n            title: 'Danh xưng',\n            autocomplete: 'honorific-prefix'\n          }\n        },\n        fullName: {\n          meta: {\n            title: 'Họ tên',\n            autocomplete: 'name'\n          }\n        },\n        phoneNumber: {\n          meta: {\n            title: 'Số điện thoại',\n            type: 'tel'\n          }\n        },\n        relationship: {\n          meta: {\n            title: 'Mối quan hệ'\n          }\n        }\n      }\n    },\n    second: {\n      type: parallel,\n      meta: {\n        title: 'Thông tin người tham chiếu thứ hai'\n      },\n      initial: 'title',\n      states: {\n        title: {\n          meta: {\n            title: 'Danh xưng',\n            autocomplete: 'honorific-prefix'\n          }\n        },\n        fullName: {\n          meta: {\n            title: 'Họ tên',\n            autocomplete: 'name'\n          }\n        },\n        phoneNumber: {\n          meta: {\n            title: 'Số điện thoại',\n            type: 'tel'\n          }\n        },\n        relationship: {\n          meta: {\n            title: 'Mối quan hệ'\n          }\n        }\n      }\n    }\n  }\n}\n\nconst idCard = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'idCardOCR',\n      cond: 'isEmpty',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    title: '',\n    name: 'idCard'\n  },\n  states: {\n    front: {\n      meta: {\n        title: 'Mặt trước CMND',\n        type: 'file'\n      }\n    },\n    back: {\n      meta: {\n        title: 'Mặt sau CMND',\n        type: 'file'\n      }\n    }\n  }\n}\n\nconst idCardOCR = {\n  invoke: {\n    id: 'id-ocr',\n    src: IDOCRMachine,\n    data: (context: OCBContext) => context,\n    onDone: 'idCardConfirm'\n  },\n  on: {\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  }\n}\n\nconst idCardConfirm = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      cond: 'idValid',\n      target: 'driverLicense',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    notice: 'Xin kiểm tra và xác nhận thông tin cá nhân được trích xuất từ CMND và vui lòng cập nhật nếu có sai lệch.',\n    name: 'idCardConfirm'\n  },\n  states: {\n    name: {\n      meta: {\n        title: 'Họ và tên',\n        placeholder: 'Nguyen Van A',\n        autocomplete: 'name'\n      }\n    },\n    id: {\n      meta: {\n        title: 'Số CMND',\n        placeholder: '2012019910'\n      }\n    },\n    birthDate: {\n      meta: {\n        title: 'Ngày sinh',\n        placeholder: '01/12/1980',\n        type: 'date',\n        autocomplete: 'bday'\n      }\n    },\n    birthPlace: {\n      meta: {\n        title: 'Nơi sinh',\n        placeholder: 'Ho Chi Minh',\n        autocomplete: 'address-level2'\n      }\n    },\n    issueDate: {\n      meta: {\n        title: 'Ngày cấp',\n        placeholder: '20/11/2020',\n        type: 'date'\n      }\n    }\n  }\n}\n\nconst driverLicense = {\n  type: parallel,\n  on: {\n    CONTINUE: {\n      target: 'driverLicenseOCR',\n      actions: 'updateStacks'\n    },\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  },\n  meta: {\n    title: '',\n    name: 'driverLicense'\n  },\n  states: {\n    front: {\n      meta: {\n        title: 'Mặt trước bằng lái xe',\n        type: 'file'\n      }\n    },\n    back: {\n      meta: {\n        title: 'Mặt sau bằng lái xe',\n        type: 'file'\n      }\n    }\n  }\n}\n\nconst driverLicenseOCR = {\n  invoke: {\n    id: 'dl-ocr',\n    src: DLOCRMachine,\n    data: (context: OCBContext) => context,\n    onDone: 'selfie'\n  },\n  on: {\n    PREV: {\n      actions: 'back'\n    },\n    NEXT: {\n      actions: 'next'\n    }\n  }\n}\n\nconst ocbFields = {\n  id: 'ocb_field',\n  initial: 'package',\n  on: {\n    POPSTATE: {\n      actions: 'updateActive'\n    },\n    UPDATE_AMOUNT: {\n      actions: assign<OCBContext>({\n        loanAmount: (context: OCBContext, {value}: any) => {\n          return parseInt(value);\n        }\n      })\n    },\n    UPDATE_DURATION: {\n      actions: assign<OCBContext>({\n        loanDuration: (context: OCBContext, {value}: any) => {\n          return parseInt(value);\n        }\n      })\n    },\n    CHANGE: {\n      actions: assign<OCBContext>({\n        monthlyPay: (context: OCBContext, event: any) => {\n          return calculateMonthlyRepayment(context.loanAmount, context.loanDuration)\n        }\n      })\n    },\n    UPDATE_FORM_VALUE: {\n      actions: 'updateFormValue'\n    }\n  },\n  states: {\n    package: packageField, // Select amount, duration of LOAN\n    primaryInfo: primaryInfo,\n    otp: {\n      invoke: {\n        id: 'otp-machine',\n        src: OTPMachine,\n        data: (context: OCBContext) => context,\n        onDone: 'profile'\n      },\n      entry: send<OCBContext, any>('CODE', {to: 'otp-machine'}),\n      on: {\n        PREV: {\n          actions: 'back'\n        },\n        NEXT: {\n          actions: 'next'\n        }\n      }\n    }, // Input require information\n    profile: profile, // Input some infor about education and marial status\n    address: address, // Input some current address\n    additionInfo: additionInfo, // Input additional infor\n    job: job, // Input job information: job status, company information\n    workplace: workplace, // Input workplace information: city, ward, district, street, number...\n    income: income, // Input income information: monthly, current LOAN, debit card, dependents.\n    bankAccount: bankAccount, // Input some bank account information\n    references: references, // Input some infor about references.\n    idCard: idCard, // Issue Card information\n    idCardOCR: idCardOCR,\n    idCardConfirm: idCardConfirm, // Confirm information generate after getting from API\n    driverLicense: driverLicense, // Driver license information\n    driverLicenseOCR: driverLicenseOCR,\n    selfie: { // Take a picture with face to confirmation\n      type: parallel,\n      on: {\n        CONTINUE: {\n          target: 'uploadSelfie',\n          actions: 'updateStacks'\n        },\n        PREV: {\n          actions: 'back'\n        }\n      },\n      meta: {\n        title: '',\n        name: 'selfie'\n      },\n      states: {\n        image: {\n          meta: {\n            title: 'Selfie',\n            type: 'file'\n          }\n        }\n      }\n    },\n    uploadSelfie: {\n      invoke: {\n        id: 'selfie-machine',\n        src: UploadMachine,\n        data: (context: OCBContext) => context,\n        onDone: '#ocb.complete'\n      }\n    }\n  }\n}\n\nconst titleStyle = {\n  fontSize: '20px',\n  color: '#000000',\n  letterSpacing: 0,\n  textShadow: '1px 1px 1px rgba(191,191,191,0.67)',\n}\n\nexport const ocbOptions = {\n  guards: {\n    // Using with cond\n    packageValid: (context:OCBContext, event: any) => {\n      if(event.values.package.values.length === 0) {\n        // Check the loan amount and loan duration is selected or not\n        return false;\n      } else {\n        const {loanAmount, loanDuration} = event.values.package.values;\n        return !(loanAmount === '' || loanDuration === '');\n      }\n    },\n    otpValid: (context: OCBContext, event: any) => {\n      const {values} = event;\n      if(values.primaryInfo.values.length === 0) {\n        return false;\n      }\n      const {name, email, phoneNumber, purpose} = values.primaryInfo.values;\n      if(name === '' || email === '' || phoneNumber === '' || purpose === '') {\n        return false;\n      }\n\n      if(!validateEmail(email)) {\n        return false;\n      }\n\n      if(!validatePhoneNumber(phoneNumber)) {\n        return false;\n      }\n\n      return true;\n    },\n    idValid: (context: OCBContext, event: any) => {\n      const {values} = event;\n      if(values.idCardConfirm.values.length === 0) {\n        return false;\n      }\n\n      const {name, id, birthDate, birthPlace, issueDate} = values.idCardConfirm.values;\n\n      if(name === '' || id === '' || birthDate === '' || birthPlace === '' || issueDate === '') {\n        return false;\n      }\n\n      if(!validateID(id)) {\n        return false;\n      }\n\n      if(!checkExpireIdDay(issueDate)) {\n        return false;\n      }\n\n      return true;\n    },\n    isEmpty: (context: OCBContext, event: any) => {\n      const {values} = event;\n      const vals = (Object.values(values) as any)[0].values;\n      return !(vals.length === 0 || (vals.length > 0 && vals.indexOf(\"\") > -1));\n    }\n  },\n  actions: {\n    // Action implementation , using assign for action\n    updateStacks: assign<any, any>({\n      stacks: (context: any, { values }: any) => {\n        return [].concat(context.stacks, values);\n      },\n      currentIndex: (context: any, { values }: any) => {\n        return context.currentIndex + 1;\n      },\n    }),\n    back: assign<any, any>({\n      currentIndex: (context: any, { values }: any) => {\n        return context.currentIndex - 1;\n      },\n    }),\n    next: assign<any, any>({\n      currentIndex: (context: any, { values }: any) => {\n        return context.currentIndex + 1;\n      },\n    }),\n    updateActive: assign<any, any>({\n      currentIndex: (context: any, { dest }: any) => {\n        const vals = context.stacks.map((stack: any) => Object.keys(stack)[0]);\n        return vals.indexOf(dest) > -1 ? vals.indexOf(dest) : vals.length;\n      },\n    }),\n    updateFormValue: assign<any, any>({\n      formValue: ({formValue}: any, {field, value}: any) => {\n        const stateIds = field.split('.');\n        const states = stateIds.length;\n        const currentState = stateIds[states - 1];\n        const parentState = stateIds[states - 2];\n        formValue[parentState] = {\n          ...formValue[parentState],\n          [currentState]: value\n        };\n        return formValue;\n      }\n    })\n  },\n  activities: {\n    // Activities : Using with activity names of their implementation\n  },\n  services: {\n    // Services: Using with src\n  }\n};\n\nconst calculateMonthlyRepayment = (amount: number = OCB_CONSTANTS.MIN_LOAN_AMOUNT, tenure: number = OCB_CONSTANTS.MIN_LOAN_TENOR) => {\n  const {LONG_SCALE, INSURANCE_RATE, INTEREST_RATE} = OCB_CONSTANTS;\n  const applyAmount = amount * LONG_SCALE;\n  const insuranceCharge = applyAmount * INSURANCE_RATE;\n  const totalLoanAmount = applyAmount + insuranceCharge;\n  const ir = INTEREST_RATE/12;\n  return EMI(ir, tenure, totalLoanAmount, 0, 0);\n}\n\n// This machine is completely decoupled from React\nexport const ocbFormMachine = Machine<OCBContext>({\n  id: 'ocb',\n  initial: 'welcome',\n  context: {\n    formValue: {},\n    monthlyPay: calculateMonthlyRepayment(),\n    currentIndex: 0,\n    stacks: [],\n    loanAmount: OCB_CONSTANTS.MIN_LOAN_AMOUNT,\n    loanDuration: OCB_CONSTANTS.MIN_LOAN_TENOR,\n    otp: '',\n    isAlreadyConfirmed: false\n  },\n  meta: {\n    primaryColor: '#008C44',\n    secondaryColor: '#063342',\n    backgroundColor: '#f1f1f1',\n    secondaryBackgroundColor: '#FFFFFF',\n    textColor: '#FFFFFF',\n    disableColor: '#DFDEDE',\n    button: {\n      fontSize: '18px',\n      borderRadius: '10px',\n      width: '100%',\n      margin: '0',\n      border: 'none',\n      fontWeight: 'bold'\n    },\n    title: titleStyle,\n    subTitle: {\n      ...titleStyle,\n      fontSize: '13px',\n      textShadow: 'none'\n    }\n  },\n  states: {\n    welcome: {\n      on: { LOGIN: 'field' },\n      meta: {\n        name: 'welcome',\n        brandName: 'COM-B',\n        usp: \"Vay tiêu dùng, vay ngay COM-B\",\n        advantages: [\"Không cần thế chấp tài sản\", \"Thủ tục đơn giản, giải ngân tốc độ trong vòng 48h làm việc\", \"Thời gian linh động từ 3 - 36 tháng\", \"Lãi suất cạnh tranh\", \"Phù hợp với đa dạng đối tượng khách hàng từ 20 - 65 tuổi\"],\n        content: 'COM-B tin tưởng rằng sẽ mang đến cho Khách hàng những sản phẩm tài chính tiêu dùng tối ưu nhất. Tất cả các khách hàng có nhu cầu vay tiêu dùng khi đến với COM-B sẽ được hỗ trợ tận tình thông qua đội ngũ bán hàng chuyện nghiệp rộng khắp cả nước.',\n        logoUrl: 'https://com-b.vn/Cms_Data/Sites/ComB/Themes/comb/images/logo.png',\n        backgroundImage: 'https://b.f9.group.zp.zdn.vn/3927480028018378368/f1a16a0b1eaae7f4bebb.jpg'\n      }\n    },\n\n    field: ocbFields,\n\n    complete: {\n      on: { LOGOUT: 'welcome' }\n    },\n    invalid: {\n      on: {\n        LOGOUT: 'welcome'\n      }\n    }\n  },\n}, ocbOptions);","const rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/;\nconst defaultStyle = { height: '100rvh', display: 'flex', alignItems: 'center' };\n// const containsRVH: Function = (propertyValue: any): boolean => {\n//     return rvhRegex.test(propertyValue);\n// }\n\nconst replaceRvhWithPx: Function = (propertyValue: String, windowHeight: number): String => {\n    return propertyValue.replace(\n        rvhRegex,\n        (_, rvh) => `${windowHeight * parseFloat(rvh) / 100}px`\n    )\n}\n\nconst throwOnBadArgs: Function = (givenStyle: any, windowHeight: number): void => {\n    if((typeof givenStyle !== 'object' && givenStyle !== undefined) || Array.isArray(givenStyle)) {\n        throw Error(`style (the first argument) must be an object or undefined`);\n    }\n\n    if(typeof windowHeight !== 'number' || windowHeight < 0) {\n        throw Error(`Second argument (windowHeight) must be a non negative number`);\n    }\n}\n\nconst convertStyle: Function = (givenStyle: any, windowHeight: number): any => {\n    throwOnBadArgs(givenStyle, windowHeight);\n\n    const usedStyle = givenStyle === undefined ? defaultStyle : givenStyle;\n\n    let result: any = {};\n\n    Object.keys(usedStyle).forEach((key) => {\n        result[key] = typeof usedStyle[key] === 'string' ? replaceRvhWithPx(usedStyle[key], windowHeight) : usedStyle[key]\n    });\n\n    return result;\n}\n\nexport default convertStyle;","import React from \"react\";\n\ntype PreloaderProps = {\n\tfadeDuration?: number,\n\tclassName?: string,\n\tchildren?: React.ReactNode,\n\tstyle?: any\n};\n\ntype PreloaderState = {\n\tloaded: boolean\n};\n\ntype PlaceholderProps = {\n\tchildren?: React.ReactNode\n};\n\nconst defaultStyle = {\n\topacity: 1,\n\tzIndex: 999,\n\tbackgroundColor: 'white',\n\theight: '100vh',\n\twidth: '100vw',\n\tposition: 'fixed',\n\ttop: 0,\n\tleft: 0,\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\talignItems: 'center',\n};\n\nclass Preloader extends React.Component<PreloaderProps, PreloaderState> {\n\tstate = { loaded: false };\n\n\tref: any;\n\n\tcomponentDidMount = () => {\n\t\twindow.requestAnimationFrame(this.checkReadyState);\n\t};\n\n\tcheckReadyState = () => {\n\t\tif (document.readyState === 'complete' && this.ref) {\n\t\t\tthis.ref.style.opacity = '0';\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ loaded: true });\n\t\t\t\tthis.ref = null;\n\t\t\t}, this.props.fadeDuration || 200);\n\t\t} else {\n\t\t\twindow.requestAnimationFrame(this.checkReadyState);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { style, className, children, fadeDuration } = this.props;\n\n\t\tconst cleanChildren = React.Children.map(\n\t\t\tchildren,\n\t\t\t(child: any) =>\n\t\t\t\t(child.type.displayName === 'PreloadingPlaceholder' ? null : child)\n\t\t);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{cleanChildren}\n\t\t\t\t{\n\t\t\t\t\tthis.state.loaded\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...defaultStyle,\n\t\t\t\t\t\t\t\t\ttransition: `opacity ${fadeDuration || 200 / 1000}s ease`,\n\t\t\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\tref={(ref) => {\n\t\t\t\t\t\t\t\t\tthis.ref = ref;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"loadicon loader show\">\n                                    <svg className=\"load-present\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n                                        <path className=\"stroke-line\" d=\"M10.2,54.4c1.1,9.5,5.5,17.9,11.8,24c-0.7-2-0.9-4.1-0.5-5.9 c1.4-5.7,7.1-9.5,15-10.7V34.7C15.6,31.1,8.8,44.2,10.2,54.4\"></path>\n                                        <path className=\"stroke-line\" d=\"M89.9,45.6c-1.1-9.5-5.5-17.9-11.8-24c0.7,1.8,0.9,3.9,0.5,5.9 c-1.4,5.7-7.1,9.5-15,10.7v27.2C84.4,68.9,91,55.6,89.9,45.6\"></path>\n                                        <path className=\"stroke-line\" d=\"M10.9,41c5.5-7.5,15.3-11.8,33.3-6.6C75.8,43.3,86,22.7,68,14.3 C62.5,11.6,56.4,10,50,10C30.9,10,15,23.4,10.9,41\"></path>\n                                        <path className=\"stroke-line\" d=\"M89.2,58.7c-5.5,7.5-15.3,11.8-33.3,6.6c-31.9-8.8-42.1,11.8-24.1,20.4 c5.5,2.7,11.6,4.3,18,4.3C69.2,89.8,85.1,76.6,89.2,58.7\"></path>\n                                    </svg>\n                                </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst Placeholder = ({ children }: PlaceholderProps) => (\n\t<React.Fragment>{children}</React.Fragment>\n);\n\nPlaceholder.displayName = 'PreloadingPlaceholder';\n\nexport { Preloader, Placeholder };","import React, { useEffect, useState } from 'react';\nimport * as Sentry from '@sentry/browser';\nimport './App.css';\nimport { useMachine } from '@xstate/react';\nimport Field from './components/Field';\nimport HistoryField from './components/HistoryField';\nimport { meta, fieldName } from './components/FormService';\nimport {Button} from './components/Button';\nimport { ocbFormMachine, OCBContext } from './forms/ocb';\nimport { logState } from './lib/Utils';\nimport convertStyle  from './lib/ConvertStyle';\nimport { State, Actor, AnyEventObject } from 'xstate';\nimport { Preloader } from './components/Preloading';\n\nSentry.init({dsn: \"https://609ae253603a43fe90b8d3f1c87d021e@sentry.io/1801688\"});\nconst serializedState = localStorage.getItem(\"stored-state\");\n\n// const OCB_FETCH_URL = 'http://localhost:3000';\n\nlet previousState: any;\n\nif(serializedState) {\n  previousState = JSON.parse(serializedState);\n}\n\nconst Welcome: React.FC<any> = (props: any) => {\n  const {current, service} = props;\n  if (!current.matches(\"welcome\")) return null\n\n  return <Wrap>\n    <div style={{textAlign: 'left', padding: '0 20px'}}>\n      <img src={meta(current,service).logoUrl} alt={meta(current,service).brandName}/>\n      <h3>{meta(current,service).usp}</h3>\n      <ul>\n        {meta(current,service).advantages.map((advantage: String, index: number) => (<li key={index}>{advantage}</li>))}\n      </ul>\n      <p>{meta(current,service).content}</p>\n      <Button onClick={() => {\n        service.send('LOGIN');\n      }} name=\"Đăng ký ngay\" current={current} service={service} />\n    </div>\n  </Wrap>\n}\n\nconst Wrap: React.FC<any> = (props: any) => {\n\n  const [style, setStyle] = useState({});\n  \n  useEffect(() => {\n    const updateStyle = () => {\n      const windowHeight = window.innerHeight;\n      const convertedStyle = convertStyle(undefined, windowHeight);\n      setStyle(convertedStyle);\n    };\n\n    updateStyle();\n\n    window.addEventListener('resize', updateStyle);\n\n    return () => {\n      window.removeEventListener('resize', updateStyle);\n    }\n  }, []);\n\n  return <div {...props} style={style}/>\n}\n\nconst Complete: React.FC<any> = (props: any) => {\n  const {current, service} = props;\n\n  if (!current.matches(\"complete\")) return null\n\n  return <Wrap>\n    <div>\n      <h1>Ho So vay cua ban da duoc gui den COM-B</h1>\n      <p>Yeu cau vay cua ban da duoc gui den doi tac cho vay. Ban se nhan duoc email tom tat trong vai phut.</p>\n      <div>\n        {current.context ? JSON.stringify(current.context.formValue) : ''}\n      </div>\n      <Button onClick={() => {\n        localStorage.removeItem('stored-state');\n        window.location.reload();\n        service.send('LOGOUT');\n      }} name=\"Log out\" service={service}/>\n    </div>\n  </Wrap>\n}\n\nconst Invalid: React.FC<any> = (props: any) => {\n  const {current, service} = props;\n\n  if (!current.matches(\"invalid\")) return null\n\n  return <Wrap>\n    <div>\n      <h1>Invalid!</h1>\n      <Button onClick={() => {\n        localStorage.removeItem('stored-state');\n        window.location.reload();\n        service.send('LOGOUT');\n      }} name=\"Log out\" service={service}/>\n    </div>\n  </Wrap>\n}\n\nconst App: React.FC = () => {\n  const machineState = useMachine(ocbFormMachine, {\n    state: previousState,\n    immediate: false\n  });\n  const service = machineState[2];\n  const current = machineState[0];\n  const send = machineState[1];\n\n  const [child, setChild] = useState({});\n  const initalChildService: Actor<any, AnyEventObject>[] = []; \n  const [childService, setChildService] = useState(initalChildService);\n\n  useEffect(() => {\n    service.onTransition((state: State<OCBContext, any>) => {\n      try {\n        logState(state);\n        const type: string = state.event.type;\n        const childrens = Object.values(state.children);\n        if(childrens && childrens.length) {\n          setChildService(childrens);\n          childrens[0].subscribe((childState: State<OCBContext, any>) => {\n            setChild(childState);\n          })\n        } else {\n          setChildService([]);\n        }\n        if(state.changed) {\n          if([\"NEXT\", \"PREV\"].indexOf(type) > -1) {\n            if(type === \"NEXT\") {\n              window.history.forward();\n            } else {\n              window.history.back();\n            }\n          } else {\n            if(type !== 'POPSTATE') {\n              const _fieldName = fieldName(state, service);\n              if(_fieldName && _fieldName !== '') {\n                window.history.pushState(null, \"DO \" + (fieldName(state, service) || ''), \"/\"+ (fieldName(state, service) || ''))\n              }\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }, [service]);\n\n  useEffect(() => {\n    window.onpopstate = function(event: any) {\n      const pathName = window.location.pathname;\n      if(pathName !== '') {\n        const dest = pathName.replace('/', '');\n        send(\"POPSTATE\", {dest});\n      }\n    }\n  }, [send])\n  \n  return (\n    <Preloader>\n      <div className=\"App\" style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}>\n        <header className=\"App-header\" style={{flex: 1, alignItems: current.matches('field') ? 'flex-end' : 'center'}}>\n          <div className=\"main\">\n            {\n              current.context.stacks.length > 0 ? current.context.stacks.map((stack: any, index: number) => {\n                if(typeof Object.values === 'undefined') {\n                  Object.values = (obj: any) => Object.keys(obj).map(key => obj[key])\n                }\n                const history = (Object.values(stack) as any)[0].state;\n                return <HistoryField service={service} current={current} history={history} key={index} index={index}></HistoryField>;\n              }) : null\n            }\n            <Welcome service={service} current={current}></Welcome>\n            {childService && childService.length ? <Field service={childService[0]} current={child} isChild={true}></Field> : <Field service={service} current={current}></Field>}\n            <Complete service={service} current={current}></Complete>\n            <Invalid service={service} current={current}></Invalid>\n          </div>\n        </header>\n      </div>\n    </Preloader>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}